@model EntityGridModel<Site>
@(Html.DataTablesGrid<Site>(parameterNamePrefix: Model.ParameterNamePrefix,
    columns: builder =>
    {
        builder
            .Custom("Site", site => Html.ActionLink(site.Name, MVC.Browse.SiteDetails(site.Id)))
            .Options(canSort: true);
        builder
            .Custom("RHI5", site => site.ComputedRHI5.HasValue ?
                MvcHtmlString.Create(site.ComputedRHI5.ToString())
                : MvcHtmlString.Create("-"))
            .Options(canFilter: false, defaultSortAscending: false);
        builder
            .Custom("RHI10", site => site.ComputedRHI10.HasValue ?
                MvcHtmlString.Create(site.ComputedRHI10.ToString())
                : MvcHtmlString.Create("-"))
            .Options(canFilter: false, defaultSortAscending: false);
        builder
            .Custom("RGI5", site => site.ComputedRGI5.HasValue ?
                MvcHtmlString.Create(site.ComputedRGI5.ToString())
                : MvcHtmlString.Create("-"))
            .Options(canFilter: false, defaultSortAscending: false);
        builder
            .Custom("RGI10", site => site.ComputedRGI10.HasValue ?
                MvcHtmlString.Create(site.ComputedRGI10.ToString())
                : MvcHtmlString.Create("-"))
            .Options(canFilter: false, defaultSortAscending: false);
    },
    rowsPerPage: Model.RowsPerPage, dataSource: Model.PageEntities, totalRowCount: Model.TotalEntitiesCount))