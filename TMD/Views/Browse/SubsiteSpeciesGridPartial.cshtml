@model EntityGridModel<TMD.Model.Trees.SubsiteMeasuredSpecies>
@(Html.DataTablesGrid<TMD.Model.Trees.SubsiteMeasuredSpecies>(parameterNamePrefix: Model.ParameterNamePrefix,
    columns: builder =>
    {
        builder
            .Custom("BotanicalName", species => Html.ActionLink(species.ScientificName, Mvc.Browse.SpeciesDetails(species.ScientificName, species.CommonName, siteId: species.Subsite.Site.Id)))
            .Options(header: "Botanical name", canSort: true);
        builder
            .Custom("CommonName", species => Html.ActionLink(species.CommonName, Mvc.Browse.SpeciesDetails(species.ScientificName, species.CommonName, siteId: species.Subsite.Site.Id)))
            .Options(header: "Common name", canSort: true);
        builder
            .Custom("MaxHeight", species => species.MaxHeight.IsValidAndSpecified() ?
                Html.ActionLink(species.MaxHeight.ToString(UserSession.Units), Mvc.Browse.TreeDetails(species.MaxHeightTree.Id))
                : MvcHtmlString.Create("-"))
            .Options(header: "Max height", canSort: true, defaultSortAscending: false);
        builder
            .Custom("MaxGirth", species => species.MaxGirth.IsValidAndSpecified() ?
                Html.ActionLink(species.MaxGirth.ToString(UserSession.Units, renderMode: UnitRenderMode.SubprefixOnly), Mvc.Browse.TreeDetails(species.MaxGirthTree.Id))
                : MvcHtmlString.Create("-"))
            .Options(header: "Max girth", canSort: true, defaultSortAscending: false);
        builder
            .Custom("MaxCrownSpread", species => species.MaxCrownSpread.IsValidAndSpecified() ?
                Html.ActionLink(species.MaxCrownSpread.ToString(UserSession.Units), Mvc.Browse.TreeDetails(species.MaxCrownSpreadTree.Id))
                : MvcHtmlString.Create("-"))
            .Options(header: "Max crown spread", canSort: true, defaultSortAscending: false);
    },
    rowsPerPage: 10, dataSource: Model.PageEntities, totalRowCount: Model.TotalEntitiesCount))